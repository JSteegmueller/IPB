#include "LCD_DirectCableTransmiter.h"
#include <Arduino.h>

void LCD_DirectCableTransmiter::init(
  unsigned char rs,
  unsigned char en,
  unsigned char d0,
  unsigned char d1,
  unsigned char d2,
  unsigned char d3)
{
  // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  // according to datasheet, we need at least 40ms after power rises above 2.7V
  // before sendByteing commands. Arduino can turn on way before 4.5V so we'll wait 50 ms
  delay(50);

  use4Bit     = true;
  rw_pin      = PIN_NOT_USED;
  rs_pin      = rs;
  e_pin       = en;
  data_pin[0] = d0;
  data_pin[1] = d1;
  data_pin[2] = d2;
  data_pin[3] = d3;

  pinMode(rs_pin, OUTPUT);
  pinMode(e_pin,  OUTPUT);

  for (int i = 0; i < 4; ++i)
  {
    pinMode(data_pin[i], OUTPUT);
  }
}

void LCD_DirectCableTransmiter::setValueEnableDataPin(unsigned char enableDisable)
{
  digitalWrite(e_pin, enableDisable); // activated by the falling edge of a HIGH pulse.
}

void LCD_DirectCableTransmiter::setDataPins(unsigned char data4or8Bit)
{
  for (int i = 0; i < (use4Bit ? 4 : 8); i++)
  {
    digitalWrite(data_pin[i], ((data4or8Bit >> i) & 0x01));
  }
}

void LCD_DirectCableTransmiter::setValueRWPin(unsigned char readWrite)
{
  if (rw_pin != PIN_NOT_USED)
  {
    digitalWrite(rw_pin, readWrite);
  }
}

void LCD_DirectCableTransmiter::setValueRSPin(unsigned char registerSelection)
{
  digitalWrite(rs_pin, registerSelection);
}

