// Present a "Will be back soon web page", as stand-in webserver.
// 2011-01-30 <jc@wippler.nl> http://opensource.org/licenses/mit-license.php

#include "EtherCard.h"

#include "LCD_HD44780.h"
#include "LCD_I2C_PCF8574_Transmiter.h"
#include "LCD_DirectCableTransmiter.h"

//LiquidCrystal
LCD_HD44780*               myLCD;
LCD_DirectCableTransmiter* myTransmitter;
//LCD_I2C_PCF8574_Transmiter*  myTransmitter;
//LiquidCrystal

#define STATIC 0  // set to 1 to disable DHCP (adjust myip/gwip values below)

#if STATIC
// ethernet interface ip address
static byte myip[] = { 192, 168, 1, 200 };
// gateway ip address
static byte gwip[] = { 10, 16, 1, 42};
#endif

// ethernet mac address - must be unique on your network
static byte mymac[] = { 0x74, 0x69, 0x69, 0x2D, 0x30, 0x31 };

byte Ethernet::buffer[500]; // tcp/ip send and receive buffer

const char page[] PROGMEM =
  "HTTP/1.0 503 Service Unavailable\r\n"
  "Content-Type: text/html\r\n"
  "Retry-After: 600\r\n"
  "\r\n"
  "<html>"
  "<head><title>"
  "Arduino Micro Pro Server"
  "</title></head>"
  "<body>"
  "<h3>This service is from *** Arduino Micro Pro *** .<br />"
  "Thank you for visiting."
  "</em></p>"
  "</body>"
  "</html>"
  ;

void setup() 
{
  Serial.begin(9600);
  Serial.println("\n[backSoon]");

  if (ether.begin(sizeof Ethernet::buffer, mymac) == 0)
    Serial.println( "Failed to access Ethernet controller");
#if STATIC
  ether.staticSetup(myip, gwip);
#else
  if (!ether.dhcpSetup())
    Serial.println("DHCP failed");
#endif

  char text[100];
  sprintf(text, "IP: %i.%i.%i.%i", ether.myip[0], ether.myip[1], ether.myip[2], ether.myip[3]);
  ether.printIp("IP:  ", ether.myip);
  ether.printIp("GW:  ", ether.gwip);
  ether.printIp("DNS: ", ether.dnsip);
  
  //LiquidCrystal
  myTransmitter = new LCD_DirectCableTransmiter();
  //  myTransmitter = new LCD_I2C_PCF8574_Transmiter();
  myTransmitter->init(8, 7, 6, 5, 4, 2);//RS EN D4 D5 D6 D7 // Ãœbertragung im 4-Bit-Mode
  // RW --> (Read/Write) Masse
  // A  --> (Anode BackLight-LED) Masse
  // K  --> (Kathode BackLight-LED) 5V
  // VO --> (Kontrast) Poti --> 0 bis 5V

  myLCD = new LCD_HD44780(myTransmitter);
  myLCD->begin(16, 2, true); // columns, rows, erwartet 4BitMode.

  myLCD->blink();
  myLCD->write(text);
  //myLCD->noDisplay();
  //LiquidCrystal
}

void loop()
{
  // wait for an incoming TCP packet, but ignore its contents
  if (ether.packetLoop(ether.packetReceive()))
  {
    memcpy_P(ether.tcpOffset(), page, sizeof page);
    ether.httpServerReply(sizeof page - 1);
  }

}
